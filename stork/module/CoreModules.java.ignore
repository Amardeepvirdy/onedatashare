package stork;

import stork.*;

public class StorkModulesCore {

  String file_name;
  FileChannel src_chan, dest_chan;

  // Parse and open src_url
  try {
    URI url = new URI(ad.get("src_url"));
    File file = new File(url);

    if (!file.isFile())
      throw new Exception("file does not exist");

    file_name = file.getName();

    FileInputStream fis = new FileInputStream(file);
    src_chan = fis.getChannel();
  } catch (Exception e) {
    fail("error opening src_url ("+e+")");
    return;
  }

  // Parse and open dest_url
  try {
    URI url = new URI(ad.get("dest_url"));
    File file = new File(url);

    // If it's a directory, append file name
    if (file.isDirectory())
      file = new File(file, file_name);

    file.createNewFile();

    if (!file.exists() || file.isDirectory())
      throw new Exception("file could not be created");

    // Open without appending
    FileOutputStream fos = new FileOutputStream(file, false);
    dest_chan = fos.getChannel();
  } catch (Exception e) {
    fail("error opening dest_url ("+e+")");
    return;
  }

  // Begin copying file
  try {
    long xferred = src_chan.transferTo(0, src_chan.size(), dest_chan);
    if (xferred != src_chan.size())
      throw new Exception("couldn't transfer whole file");
  } catch (Exception e) {
    reschedule(e.toString());
    return;
  }
}
